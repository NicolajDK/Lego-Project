//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Lego_Project_Core.Models
{
	/// <summary>Lego Set</summary>
	[PublishedContentModel("legoSet")]
	public partial class LegoSet : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "legoSet";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public LegoSet(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<LegoSet, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Set Height: Height of the set in cm
		///</summary>
		[ImplementPropertyType("height")]
		public int Height
		{
			get { return this.GetPropertyValue<int>("height"); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return this.GetPropertyValue<IPublishedContent>("image"); }
		}

		///<summary>
		/// Number of Bricks: Enter the number of bricks for the set
		///</summary>
		[ImplementPropertyType("numberOfBricks")]
		public int NumberOfBricks
		{
			get { return this.GetPropertyValue<int>("numberOfBricks"); }
		}

		///<summary>
		/// Set Release Date: Date for the release of the set
		///</summary>
		[ImplementPropertyType("releaseDate")]
		public DateTime ReleaseDate
		{
			get { return this.GetPropertyValue<DateTime>("releaseDate"); }
		}

		///<summary>
		/// Set Code: Lego set code
		///</summary>
		[ImplementPropertyType("setCode")]
		public string SetCode
		{
			get { return this.GetPropertyValue<string>("setCode"); }
		}

		///<summary>
		/// Set Description: Description of the lego set
		///</summary>
		[ImplementPropertyType("setDescription")]
		public IHtmlString SetDescription
		{
			get { return this.GetPropertyValue<IHtmlString>("setDescription"); }
		}

		///<summary>
		/// Set Gallery: Select the pictures for the gallery
		///</summary>
		[ImplementPropertyType("setGallery")]
		public IEnumerable<IPublishedContent> SetGallery
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("setGallery"); }
		}

		///<summary>
		/// Set Title: Title of a lego set
		///</summary>
		[ImplementPropertyType("setTitle")]
		public string SetTitle
		{
			get { return this.GetPropertyValue<string>("setTitle"); }
		}

		///<summary>
		/// Set Width: Width of the set in cm
		///</summary>
		[ImplementPropertyType("setWidth")]
		public int SetWidth
		{
			get { return this.GetPropertyValue<int>("setWidth"); }
		}
	}
}
